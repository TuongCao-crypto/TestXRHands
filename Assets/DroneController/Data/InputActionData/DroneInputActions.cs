//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/DroneController/Data/InputActionData/DroneInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/DroneController/Data/InputActionData/DroneInputActions.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @DroneInputActions: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @DroneInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DroneInputActions"",
    ""maps"": [
        {
            ""name"": ""Default Input"",
            ""id"": ""cb9c8c9a-86c3-4c4d-ba48-f557456220de"",
            ""actions"": [
                {
                    ""name"": ""Throttle"",
                    ""type"": ""Value"",
                    ""id"": ""258b3a67-127d-4f1b-9f1f-1808cdb40098"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Value"",
                    ""id"": ""1d1db516-a447-4448-b79b-9dec33b98a24"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Value"",
                    ""id"": ""72e7202c-776a-496f-a8ca-b77791513e33"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Value"",
                    ""id"": ""dbb0a3ec-80d7-4fd4-8edc-9a8f12a48487"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""db9a2aa3-4a2f-47d3-9f43-a27945663f8a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""ca5b4c67-8af6-4bce-8c2f-785ef3eff731"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReturnHome"",
                    ""type"": ""Button"",
                    ""id"": ""c123b3f8-f4db-4f2f-bc56-27cdf51a2c3c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftJoyStick"",
                    ""type"": ""Value"",
                    ""id"": ""e29712d7-cf32-4be1-b456-dbf4a2a50395"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightJoyStick"",
                    ""type"": ""Value"",
                    ""id"": ""ac105462-b7a0-47a7-95a8-d9c4bdb502c9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StartEngineEditor"",
                    ""type"": ""Button"",
                    ""id"": ""9dda4ca4-7e35-4be9-85d2-9cd44af39968"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftTriggerButton"",
                    ""type"": ""Value"",
                    ""id"": ""3237f77d-9090-4b6e-b5de-6d5d29bfea1e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightTriggerButton"",
                    ""type"": ""Value"",
                    ""id"": ""e5cf976e-9acc-4571-9599-33541b6dbda5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftGripButton"",
                    ""type"": ""Button"",
                    ""id"": ""54a8fc98-5244-496a-a7af-e587a0fceacf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightGripButton"",
                    ""type"": ""Button"",
                    ""id"": ""a5120aa1-422d-4457-af2a-567c5467de88"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b8a3b8c1-91eb-4e79-bc42-0a3d6e745e22"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""565ecdc3-388b-443b-88ae-f0d5662414aa"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""5a90991e-99b9-4d98-bfeb-26afa0caa5f9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2c51d9fd-118b-42ce-b76b-e053ac89066e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c4f6eaa1-55f6-45f2-bc39-0b6f3e4ed6b1"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""e8f7ee4d-6352-41a7-89f5-ef1fba3fbc40"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f8de3cf8-8c54-42f8-a2b5-da500eb483ea"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fe78d091-7c7f-459a-ace1-0794aecced01"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6640a56d-2028-41f9-b86b-f0e9bfad1cac"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""3c317967-e4c9-4b7b-8174-5736555f5b83"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""791f12c9-c519-4f3a-8f0e-ccbc59ca7066"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6a7c33b5-4090-4244-85d5-17ad843e4ee9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b50a5b8e-888a-4b42-bdf7-9cdba3d7c829"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""d41a03a1-dffd-4763-abcb-2a738a80a53b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""66dd4a9f-b63b-4fa3-b796-1e2e74934437"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""585b1258-bca0-4f01-bdf7-29784852a821"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2623867f-c74d-476d-b1c0-a47964fb1db5"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd1a2378-976d-45c4-a52a-520fc1ec132e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a53c51b4-1c60-4531-84f3-5ef70f2bad9f"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cd64819-0186-47d0-821e-549e72346013"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7ec55fa-cfcb-419c-9cfd-62a708e775f3"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReturnHome"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8549ad0-c3f7-427e-8140-0fc5180ecedb"",
                    ""path"": ""<XRController>{LeftHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""ReturnHome"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87bf841d-f837-4aad-a0c4-b209c3ff03db"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""LeftJoyStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1855d2a3-2a85-45db-8ddb-73208be8ebc5"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""RightJoyStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce61fefe-0902-4a69-a3ae-36bbebb06ee3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartEngineEditor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd42c6b2-56a6-45e5-8e1d-5ef44352516e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftTriggerButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec0eec67-4d65-43ed-90c5-4600b3be0b17"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""LeftTriggerButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adb27844-e6c9-4764-a576-1bf4e5af880e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightTriggerButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00012157-6908-47cd-8986-6ee68107938d"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""RightTriggerButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32696479-7c61-4835-bfd9-0a704394ad48"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""LeftGripButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0341405-7e53-4b2f-9691-5a08e860bd99"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR"",
                    ""action"": ""RightGripButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Default Input
        m_DefaultInput = asset.FindActionMap("Default Input", throwIfNotFound: true);
        m_DefaultInput_Throttle = m_DefaultInput.FindAction("Throttle", throwIfNotFound: true);
        m_DefaultInput_Yaw = m_DefaultInput.FindAction("Yaw", throwIfNotFound: true);
        m_DefaultInput_Pitch = m_DefaultInput.FindAction("Pitch", throwIfNotFound: true);
        m_DefaultInput_Roll = m_DefaultInput.FindAction("Roll", throwIfNotFound: true);
        m_DefaultInput_ButtonA = m_DefaultInput.FindAction("ButtonA", throwIfNotFound: true);
        m_DefaultInput_ButtonB = m_DefaultInput.FindAction("ButtonB", throwIfNotFound: true);
        m_DefaultInput_ReturnHome = m_DefaultInput.FindAction("ReturnHome", throwIfNotFound: true);
        m_DefaultInput_LeftJoyStick = m_DefaultInput.FindAction("LeftJoyStick", throwIfNotFound: true);
        m_DefaultInput_RightJoyStick = m_DefaultInput.FindAction("RightJoyStick", throwIfNotFound: true);
        m_DefaultInput_StartEngineEditor = m_DefaultInput.FindAction("StartEngineEditor", throwIfNotFound: true);
        m_DefaultInput_LeftTriggerButton = m_DefaultInput.FindAction("LeftTriggerButton", throwIfNotFound: true);
        m_DefaultInput_RightTriggerButton = m_DefaultInput.FindAction("RightTriggerButton", throwIfNotFound: true);
        m_DefaultInput_LeftGripButton = m_DefaultInput.FindAction("LeftGripButton", throwIfNotFound: true);
        m_DefaultInput_RightGripButton = m_DefaultInput.FindAction("RightGripButton", throwIfNotFound: true);
    }

    ~@DroneInputActions()
    {
        UnityEngine.Debug.Assert(!m_DefaultInput.enabled, "This will cause a leak and performance issues, DroneInputActions.DefaultInput.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default Input
    private readonly InputActionMap m_DefaultInput;
    private List<IDefaultInputActions> m_DefaultInputActionsCallbackInterfaces = new List<IDefaultInputActions>();
    private readonly InputAction m_DefaultInput_Throttle;
    private readonly InputAction m_DefaultInput_Yaw;
    private readonly InputAction m_DefaultInput_Pitch;
    private readonly InputAction m_DefaultInput_Roll;
    private readonly InputAction m_DefaultInput_ButtonA;
    private readonly InputAction m_DefaultInput_ButtonB;
    private readonly InputAction m_DefaultInput_ReturnHome;
    private readonly InputAction m_DefaultInput_LeftJoyStick;
    private readonly InputAction m_DefaultInput_RightJoyStick;
    private readonly InputAction m_DefaultInput_StartEngineEditor;
    private readonly InputAction m_DefaultInput_LeftTriggerButton;
    private readonly InputAction m_DefaultInput_RightTriggerButton;
    private readonly InputAction m_DefaultInput_LeftGripButton;
    private readonly InputAction m_DefaultInput_RightGripButton;
    /// <summary>
    /// Provides access to input actions defined in input action map "Default Input".
    /// </summary>
    public struct DefaultInputActions
    {
        private @DroneInputActions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public DefaultInputActions(@DroneInputActions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/Throttle".
        /// </summary>
        public InputAction @Throttle => m_Wrapper.m_DefaultInput_Throttle;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/Yaw".
        /// </summary>
        public InputAction @Yaw => m_Wrapper.m_DefaultInput_Yaw;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/Pitch".
        /// </summary>
        public InputAction @Pitch => m_Wrapper.m_DefaultInput_Pitch;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/Roll".
        /// </summary>
        public InputAction @Roll => m_Wrapper.m_DefaultInput_Roll;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/ButtonA".
        /// </summary>
        public InputAction @ButtonA => m_Wrapper.m_DefaultInput_ButtonA;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/ButtonB".
        /// </summary>
        public InputAction @ButtonB => m_Wrapper.m_DefaultInput_ButtonB;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/ReturnHome".
        /// </summary>
        public InputAction @ReturnHome => m_Wrapper.m_DefaultInput_ReturnHome;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/LeftJoyStick".
        /// </summary>
        public InputAction @LeftJoyStick => m_Wrapper.m_DefaultInput_LeftJoyStick;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/RightJoyStick".
        /// </summary>
        public InputAction @RightJoyStick => m_Wrapper.m_DefaultInput_RightJoyStick;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/StartEngineEditor".
        /// </summary>
        public InputAction @StartEngineEditor => m_Wrapper.m_DefaultInput_StartEngineEditor;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/LeftTriggerButton".
        /// </summary>
        public InputAction @LeftTriggerButton => m_Wrapper.m_DefaultInput_LeftTriggerButton;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/RightTriggerButton".
        /// </summary>
        public InputAction @RightTriggerButton => m_Wrapper.m_DefaultInput_RightTriggerButton;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/LeftGripButton".
        /// </summary>
        public InputAction @LeftGripButton => m_Wrapper.m_DefaultInput_LeftGripButton;
        /// <summary>
        /// Provides access to the underlying input action "DefaultInput/RightGripButton".
        /// </summary>
        public InputAction @RightGripButton => m_Wrapper.m_DefaultInput_RightGripButton;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_DefaultInput; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="DefaultInputActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(DefaultInputActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="DefaultInputActions" />
        public void AddCallbacks(IDefaultInputActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultInputActionsCallbackInterfaces.Add(instance);
            @Throttle.started += instance.OnThrottle;
            @Throttle.performed += instance.OnThrottle;
            @Throttle.canceled += instance.OnThrottle;
            @Yaw.started += instance.OnYaw;
            @Yaw.performed += instance.OnYaw;
            @Yaw.canceled += instance.OnYaw;
            @Pitch.started += instance.OnPitch;
            @Pitch.performed += instance.OnPitch;
            @Pitch.canceled += instance.OnPitch;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @ButtonA.started += instance.OnButtonA;
            @ButtonA.performed += instance.OnButtonA;
            @ButtonA.canceled += instance.OnButtonA;
            @ButtonB.started += instance.OnButtonB;
            @ButtonB.performed += instance.OnButtonB;
            @ButtonB.canceled += instance.OnButtonB;
            @ReturnHome.started += instance.OnReturnHome;
            @ReturnHome.performed += instance.OnReturnHome;
            @ReturnHome.canceled += instance.OnReturnHome;
            @LeftJoyStick.started += instance.OnLeftJoyStick;
            @LeftJoyStick.performed += instance.OnLeftJoyStick;
            @LeftJoyStick.canceled += instance.OnLeftJoyStick;
            @RightJoyStick.started += instance.OnRightJoyStick;
            @RightJoyStick.performed += instance.OnRightJoyStick;
            @RightJoyStick.canceled += instance.OnRightJoyStick;
            @StartEngineEditor.started += instance.OnStartEngineEditor;
            @StartEngineEditor.performed += instance.OnStartEngineEditor;
            @StartEngineEditor.canceled += instance.OnStartEngineEditor;
            @LeftTriggerButton.started += instance.OnLeftTriggerButton;
            @LeftTriggerButton.performed += instance.OnLeftTriggerButton;
            @LeftTriggerButton.canceled += instance.OnLeftTriggerButton;
            @RightTriggerButton.started += instance.OnRightTriggerButton;
            @RightTriggerButton.performed += instance.OnRightTriggerButton;
            @RightTriggerButton.canceled += instance.OnRightTriggerButton;
            @LeftGripButton.started += instance.OnLeftGripButton;
            @LeftGripButton.performed += instance.OnLeftGripButton;
            @LeftGripButton.canceled += instance.OnLeftGripButton;
            @RightGripButton.started += instance.OnRightGripButton;
            @RightGripButton.performed += instance.OnRightGripButton;
            @RightGripButton.canceled += instance.OnRightGripButton;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="DefaultInputActions" />
        private void UnregisterCallbacks(IDefaultInputActions instance)
        {
            @Throttle.started -= instance.OnThrottle;
            @Throttle.performed -= instance.OnThrottle;
            @Throttle.canceled -= instance.OnThrottle;
            @Yaw.started -= instance.OnYaw;
            @Yaw.performed -= instance.OnYaw;
            @Yaw.canceled -= instance.OnYaw;
            @Pitch.started -= instance.OnPitch;
            @Pitch.performed -= instance.OnPitch;
            @Pitch.canceled -= instance.OnPitch;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @ButtonA.started -= instance.OnButtonA;
            @ButtonA.performed -= instance.OnButtonA;
            @ButtonA.canceled -= instance.OnButtonA;
            @ButtonB.started -= instance.OnButtonB;
            @ButtonB.performed -= instance.OnButtonB;
            @ButtonB.canceled -= instance.OnButtonB;
            @ReturnHome.started -= instance.OnReturnHome;
            @ReturnHome.performed -= instance.OnReturnHome;
            @ReturnHome.canceled -= instance.OnReturnHome;
            @LeftJoyStick.started -= instance.OnLeftJoyStick;
            @LeftJoyStick.performed -= instance.OnLeftJoyStick;
            @LeftJoyStick.canceled -= instance.OnLeftJoyStick;
            @RightJoyStick.started -= instance.OnRightJoyStick;
            @RightJoyStick.performed -= instance.OnRightJoyStick;
            @RightJoyStick.canceled -= instance.OnRightJoyStick;
            @StartEngineEditor.started -= instance.OnStartEngineEditor;
            @StartEngineEditor.performed -= instance.OnStartEngineEditor;
            @StartEngineEditor.canceled -= instance.OnStartEngineEditor;
            @LeftTriggerButton.started -= instance.OnLeftTriggerButton;
            @LeftTriggerButton.performed -= instance.OnLeftTriggerButton;
            @LeftTriggerButton.canceled -= instance.OnLeftTriggerButton;
            @RightTriggerButton.started -= instance.OnRightTriggerButton;
            @RightTriggerButton.performed -= instance.OnRightTriggerButton;
            @RightTriggerButton.canceled -= instance.OnRightTriggerButton;
            @LeftGripButton.started -= instance.OnLeftGripButton;
            @LeftGripButton.performed -= instance.OnLeftGripButton;
            @LeftGripButton.canceled -= instance.OnLeftGripButton;
            @RightGripButton.started -= instance.OnRightGripButton;
            @RightGripButton.performed -= instance.OnRightGripButton;
            @RightGripButton.canceled -= instance.OnRightGripButton;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="DefaultInputActions.UnregisterCallbacks(IDefaultInputActions)" />.
        /// </summary>
        /// <seealso cref="DefaultInputActions.UnregisterCallbacks(IDefaultInputActions)" />
        public void RemoveCallbacks(IDefaultInputActions instance)
        {
            if (m_Wrapper.m_DefaultInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="DefaultInputActions.AddCallbacks(IDefaultInputActions)" />
        /// <seealso cref="DefaultInputActions.RemoveCallbacks(IDefaultInputActions)" />
        /// <seealso cref="DefaultInputActions.UnregisterCallbacks(IDefaultInputActions)" />
        public void SetCallbacks(IDefaultInputActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="DefaultInputActions" /> instance referencing this action map.
    /// </summary>
    public DefaultInputActions @DefaultInput => new DefaultInputActions(this);
    private int m_XRSchemeIndex = -1;
    /// <summary>
    /// Provides access to the input control scheme.
    /// </summary>
    /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Default Input" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="DefaultInputActions.AddCallbacks(IDefaultInputActions)" />
    /// <seealso cref="DefaultInputActions.RemoveCallbacks(IDefaultInputActions)" />
    public interface IDefaultInputActions
    {
        /// <summary>
        /// Method invoked when associated input action "Throttle" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnThrottle(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Yaw" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnYaw(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Pitch" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPitch(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Roll" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRoll(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ButtonA" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnButtonA(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ButtonB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnButtonB(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ReturnHome" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnReturnHome(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LeftJoyStick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLeftJoyStick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RightJoyStick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRightJoyStick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "StartEngineEditor" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnStartEngineEditor(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LeftTriggerButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLeftTriggerButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RightTriggerButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRightTriggerButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LeftGripButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLeftGripButton(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RightGripButton" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRightGripButton(InputAction.CallbackContext context);
    }
}
